rule "Send counters"
	when 
		Time cron "0 45 9 1 * ?"
	then
		val  ZonedDateTime 	zdt = ZonedDateTime.now();
		val ZonedDateTime first = zdt.withDayOfMonth(1).toLocalDate().atStartOfDay(zdt.getZone());
		val ZonedDateTime second = zdt.minusMonths(1).withDayOfMonth(1).toLocalDate().atStartOfDay(zdt.getZone());

		val Number gcount = ((WB_GasCounter.historicState(first,"influxdb")).state as DecimalType).floatValue;
		val Number g_old_count = ((WB_GasCounter.historicState(second,"influxdb")).state as DecimalType).floatValue;
		val Number pcount = ((Power_Energy.historicState(first,"influxdb")).state as DecimalType).floatValue;
		val Number p_old_count = ((Power_Energy.historicState(second,"influxdb")).state as DecimalType).floatValue;

		var String message1 = "Показники лічильника газу\n\n";
		message1 += String::format("Показник станом на 01.%1$02d.%2$02d: %3$.2f m3\n", second.getMonthValue(), second.getYear(), (g_old_count));	
		message1 += String::format("Показник станом на 01.%1$02d.%2$02d: %3$.2f m3\n", first.getMonthValue(), first.getYear(), (gcount));	
		message1 += String::format("Спожито за місяць: %1$.2f m3", ((gcount-g_old_count)));	

		var String message2 = "Показники лічильника ел.енергії\n\n";
		message2 += String::format("Показник станом на 01.%1$02d.%2$02d: %3$.2f kWh\n", second.getMonthValue(), second.getYear(), p_old_count);	
		message2 += String::format("Показник станом на 01.%1$02d.%2$02d: %3$.2f kWh\n", first.getMonthValue(), first.getYear(), pcount);	
		message2 += String::format("Спожито за місяць: %1$.2f kWh", (pcount-p_old_count));	
		val mailActions = getActions("mail","mail:smtp:327b0d61")
		mailActions.sendMail("sv_h@ukr.net", "Показники лічильників", message1 + "\n\n\n" + message2);
		
end